volumes:
  vol-emqx-data:
    name: foo-emqx-data
  vol-emqx-etc:
    name: foo-emqx-etc
  vol-emqx-log:
    name: foo-emqx-log

  app-db-data:


networks:
  iot:
    name: iot_host
    driver: bridge

services:

  # db:
  #   container_name: db
  #   image: postgres:13
  #   restart: always
  #   volumes:
  #     - app-db-data:/var/lib/postgresql/data/pgdata
  #     - ./db/initialize_db.sh:/docker-entrypoint-initdb.d/initialize_db.sh
  #     - ./db/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

  #   env_file:
  #     - .env
  #   environment:
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
  #     - POSTGRES_USER=${POSTGRES_USER?Variable not set}
  #     - POSTGRES_DB=${POSTGRES_DB?Variable not set}
  #   networks:
  #     iot:
  #       aliases:
  #         - postgres_host

  # adminer:
  #   container_name: adminer
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080
  #   networks:
  #     iot:
  #       aliases:
  #         - adminer_host

  emqx:
    container_name: emqx
    image: emqx/emqx:4.4.19
    # depends_on:
    #   - db
    restart: always

    ports:
      - 18083:18083
      - 18084:18084
      - 1883:1883
      - 8883:8883
      - 8073:8083
      - 8074:8084
      - 8082:8082
      - 8081:8081

    volumes:
      - vol-emqx-data:/opt/emqx/data
      - vol-emqx-etc:/opt/emqx/etc
      - vol-emqx-log:/opt/emqx/log

    # extra_hosts:
    #   - "localhost:192.168.30.170"

    environment:
      TZ: ${TZ}
      EMQX_NAME: ${EMQX_NAME}
      EMQX_HOST: 127.0.0.1

      ## Value: String
      # dashboard.default_user.password = public
      EMQX_DASHBOARD__DEFAULT_USER__PASSWORD: ${EMQX_DASHBOARD_DEFAULT_USER_PASSWORD}

      EMQX_ALLOW_ANONYMOUS: ${EMQX_ALLOW_ANONYMOUS}
      EMQX_NOMATCH: "deny"
      EMQX_NODE_COOKIE: ${EMQX_NODE_COOKIE}

      # auth.pgsql.encoding = utf8
      EMQX_AUTH__PGSQL__SERVER: ${EMQX_AUTH_PGSQL_SERVER}
      # auth.pgsql.pool = 8
      EMQX_AUTH__PGSQL__POOL: "8"
      # auth.pgsql.username = root
      EMQX_AUTH__PGSQL__USERNAME: ${POSTGRES_USER}
      # auth.pgsql.password = public
      EMQX_AUTH__PGSQL__PASSWORD: ${POSTGRES_PASSWORD}
      # auth.pgsql.database = mqtt
      EMQX_AUTH__PGSQL__DATABASE: ${POSTGRES_DB}
      #auth.pgsql.encoding = utf8
      EMQX_AUTH__PGSQL__ENCODING: "utf8"
      #auth.pgsql.ssl = false

      #auth.pgsql.password_hash = sha256
      EMQX_AUTH__PGSQL__PASSWORD_HASH: "bcrypt"
      #auth.pgsql.auth_query = select hashed_password as password from mqtt_user where username = '%u' limit 1
      EMQX_AUTH__PGSQL__AUTH_QUERY: "select hashed_password as password from mqtt_user where username = '%u' limit 1"

      #dashboard.listener.https = 18084
      EMQX_DASHBOARD__LISTENER__HTTPS: 18084
      #dashboard.listener.https.acceptors = 2
      EMQX_DASHBOARD__LISTENER__HTTPS__ACCEPTORS: 2
      #dashboard.listener.https.max_clients = 512
      EMQX_DASHBOARD__LISTENER__HTTPS__MAX_CLIENTS: 2
      #dashboard.listener.https.keyfile = etc/certs/key.pem
      EMQX_DASHBOARD__LISTENER__HTTPS__KEYFILE: "etc/certs/key.pem"
      #dashboard.listener.https.certfile = etc/certs/cert.pem
      EMQX_DASHBOARD__LISTENER__HTTPS__CERTFILE: "etc/certs/cert.pem"

      #dashboard.listener.http.max_clients = 512 - 18083 - 2
      EMQX_DASHBOARD__LISTENER__HTTP__MAX_CLIENTS: 2

      #management.listener.https = 8081
      EMQX_MANAGEMENT__LISTENER_HTTPS: 8082
      #management.listener.https.acceptors = 2
      EMQX_MANAGEMENT__LISTENER_HTTPS__ACCEPTORS: 2
      #management.listener.https.max_clients = 512
      EMQX_MANAGEMENT__LISTENER_HTTPS__MAX_CLIENTS: 2
      #management.listener.https.backlog = 512
      EMQX_MANAGEMENT__LISTENER_HTTPS__BACKLOG: 2
      #management.listener.https.send_timeout = 15s
      EMQX_MANAGEMENT__LISTENER_HTTPS__SEND_TIMEOUT: "15s"
      #management.listener.https.send_timeout_close = on
      EMQX_MANAGEMENT__LISTENER_HTTPS__SEND__TIMEOUT_CLOSE: "on"
      #management.listener.https.certfile = etc/certs/cert.pem
      EMQX_MANAGEMENT__LISTENER_HTTPS__CERTFILE: "etc/certs/cert.pem"
      #management.listener.https.keyfile = etc/certs/key.pem
      EMQX_MANAGEMENT__LISTENER_HTTPS__KEYFILE: "etc/certs/key.pem"

      #listener.tcp.external.max_connections = 1024000 Puerto 1883
      EMQX_LISTENER__TCP__EXTERNAL__MAX_CONNECTIONS: 1000
      #listener.ssl.external.max_connections = 102400 Puerto 8883
      EMQX_LISTENER__SSL__EXTERNAL__MAX_CONNECTIONS: 1000
      #listener.ws.external.max_connections = 102400 Puerto 8083
      EMQX_LISTENER__WS__EXTERNAL__MAX_CONNECTIONS: 1000
      #listener.wss.external.max_connections = 102400 Puerto 8084
      EMQX_LISTENER__WSS__EXTERNAL__MAX_CONNECTIONS: 1000

      EMQX_LOADED_PLUGINS: "emqx_recon,emqx_retainer,emqx_management,emqx_dashboard,emqx_auth_pgsql"

    networks:
      iot:
        aliases:
          - emqx_host
